# int(바꿀 값) : <바꿀 값>을 정수로 바꿔서 사용할 수 있게 해준다.
# 정수형태의 문자열, 실수, (정수-안함)
value = "123" # 겉보기 모양이 정수와 닮은 문자열
fnum = 3.99
# 1. 필요한 곳에 값으로 작성한다.
print("결과1 :", int(value)+3)
# 2. 변수에 저장한다.
num = int(value) # 원본유지
print("결과2 :", num+3, type(value))
value = int(value) # 원본파괴
print("결과3 :", value+3, type(value))
# 실수값은 바꾸면 소수점 버림처리(몫만 남는다.)
print("결과4 :", int(fnum))

# float(바꿀값) : 실수로 바꾼다.
# 정수형변환 + 실수형태의 문자열, (정수,실수 - 안함)
value1="123"
value2="3.99"
# 프로그램은 기본적으로 현실의 문제를 해결한다.
# -> 현실에서 정립되어 있지 않은 개념은 프로그래밍언어에도 없다.
print(float(value1), float(value2))
# 정수형변환은 빡빡한 반면, 실수형변환은 널널한 기준을 가지고 있다.

# str(바꿀값) : 문자열로 바꾼다.
# 다 됨. 안되는 것은, 새롭게 만들어진 자료형 빼고는 다 됨
# 문자열의 특성을 이용하여, 값을 관리하기 위해 사용한다.
# 가장 융통성이 좋은 값이기 때문에, 값을 손쉽게 편집할 수 있다.

# 형변환에서 주의사항
# 1. 같은 걸로 바꾸지 않는다.
print(int(123),float(3.14)) # 뭐하러 바꾸는건지 의미가 없음

# 2. (실수형변환) 정수를 실수로 바꾸지 않는다.
print(123, float(123))
# 연산이 안되는 것도 아니며, 연산자에 따라서 연산결과물은 달라진다.
















