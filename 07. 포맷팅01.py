# formatting
# format : 서식을 맞추다. 양식에 맞추다.
# 양식/서식에 맞춰 값을 출력하기 위한 방법

# 일반(기본) 포맷팅 : 서식문자와 순서
# 서식문자 : c s d f가 가장 많이 쓰인다.
# - 파이썬 한정 s, f만 신경써도 충분하다.
# - 형변환도 같이 들어가서 편리하다!

# %c : 단일문자 + 정수값에 대한 서식
print("단일문자1 : %c"%("A"))
print("단일문자2 : %c"%("가"))
print("단일문자3 : %c"%(2255)) # 가장 많이 쓴다.

# %d : 정수 + 실수 + 형변환
count=600/57.7
print("수량 : ",int(count),"개",sep="")
print("수량 : %d개"%(count))

# %f : 정수 + 실수 + 형변환
# round() : 반올림함수
value = 94.377
print("소수점 두자리 :",round(value,2))
print("소수점 두자리 : %.2f"%(value))
print("소수점 : %f"%(value))
# 서식문자 사이에 .X형태로 작성하여 소수점 조절 가능

# %s : 다됨. 뭐가 들어올지 불분명할 때 유용하다.
print("%s %s %s"%(123,3.14,print))

# 옵션은 서식문자에 따라 작동이 다르니 주의할 것
# %X.Y서식문자
# X : 공통옵션. 정렬을 위한 폭(Width) 설정
# - 그냥 쓰면 우측정렬
# - -를 앞에 붙이면 좌측정렬
print("1\t2\t3") # 너무 좁거나 넓을 수 있다.
print("#%3d#%-3d#%3d#"%(1,2,3))

# .Y : 서식문자마다 동작이 다름
print("->%.5c<-"%('A')) # 별 의미없음
print("->%.5d<-"%(123)) # 0을 붙여줌
print("->%.5f<-"%(3.1234567)) # 조절 및 반올림처리
print("->%.5s<-"%("ABCDEFG")) # 선두 슬라이싱

# 실사용은 %s, %.Yf 형태 위주로 사용된다.